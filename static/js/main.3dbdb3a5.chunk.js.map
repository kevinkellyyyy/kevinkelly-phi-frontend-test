{"version":3,"sources":["logo.svg","components/Users.js","components/AddUser.js","components/base.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Users","handleUpdate","props","updateUser","idxNum","uname","value","uaddress","uphone","this","allUsers","pressEditBtn","pressCancelBtn","pressDelete","usersList","map","user","idx","isEditing","key","className","type","ref","val","required","defaultValue","name","address","phone","onClick","aria-hidden","length","colSpan","Component","AddUser","state","handleSubmit","e","preventDefault","addUser","target","reset","updateState","console","log","setState","onSubmit","autoComplete","placeholder","onChange","Base","users","newUser","i","q","filter","u","index","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3dbdb3a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nexport default class Users extends Component{\r\n    handleUpdate = () => {\r\n        this.props.updateUser(this.idxNum, this.uname.value, this.uaddress.value, this.uphone.value);\r\n    }\r\n\r\n    render() {\r\n        const {allUsers, pressEditBtn, pressCancelBtn, pressDelete} = this.props;\r\n        const usersList = allUsers.map((user, idx) => {\r\n            return user.isEditing === true ? (\r\n                <tr key={idx}>\r\n                    <td>{idx+1}</td>\r\n                    <td><input className=\"inpField form-control\" type=\"text\" ref={(val) => {this.uname = val}} required defaultValue={user.name}/></td>\r\n                    <td><input className=\"inpField form-control\" type=\"text\" ref={(val) => {this.uaddress = val}} required defaultValue={user.address}/></td>\r\n                    <td><input className=\"form-control\" type=\"text\" ref={(val) => {this.uphone = val}} required defaultValue={user.phone}/></td>\r\n                    <td><button className=\"btn btnUp\" onClick={this.handleUpdate} ref={() => {this.idxNum = idx}}>Update <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i></button> | <button className=\"btn btnCnl btn-secondary\" onClick={() => pressCancelBtn(idx)}>Cancel <i className=\"fa fa-ban\" aria-hidden=\"true\"></i></button></td>\r\n                    \r\n                </tr> \r\n            ) : (\r\n                    <tr key={idx}>\r\n                        <td>{idx+1}</td>\r\n                        <td>{user.name}</td>\r\n                        <td>{user.address}</td>\r\n                        <td>{user.phone}</td>\r\n                        <td><button className=\"btn btnEdit\" onClick={() => pressEditBtn(idx)}>Edit <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i></button>  |  <button className=\"btn btnDel\" onClick={()=>pressDelete(idx)}>Delete <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button></td>\r\n                    </tr>\r\n            )\r\n        })\r\n        return(\r\n            <table className=\"table table-dark table-striped table-hover table-sm ta\">\r\n                <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th>#No</th>\r\n                        <th>Name</th>\r\n                        <th>Address</th>\r\n                        <th>Phone</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody className=\".table-striped\">\r\n                    {allUsers.length > 0 ? usersList : <tr className=\"noData\"><td colSpan=\"5\"><h2>No Employee data, please add below</h2></td></tr>}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}","import React,{ Component } from 'react';\r\n\r\nexport default class AddUser extends Component{\r\n    state = {\r\n        name: null,\r\n        address: null,\r\n        phone: null,\r\n        isEditing: false\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addUser(this.state);\r\n        e.target.reset();\r\n    }\r\n\r\n    updateState = (e) => {\r\n        console.log(e.target.value);\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    <h2>Add New Employee Data</h2>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <div className=\"formRes form-row\">\r\n                            <div className=\"col\">\r\n                                <input className=\"form-control\" type=\"text\" name=\"name\" autoComplete=\"off\" placeholder=\"Enter Name\" onChange={ this.updateState}  required />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input className=\"form-control\" type=\"text\" name=\"address\" autoComplete=\"off\" placeholder=\"Enter Address\" onChange={ this.updateState }  required />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input className=\"form-control\" type=\"number\" name=\"phone\" autoComplete=\"off\" placeholder=\"Enter Phone Number\" onChange={ this.updateState }  required />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <button type=\"submit\" className=\"btn btnAdd\">Add New <i className=\"fa fa-plus-square-o\" aria-hidden=\"true\"></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Users from './Users';\r\nimport AddUser from './AddUser';\r\n\r\nexport default class Base extends Component{\r\n    state = {\r\n        users: [\r\n            {name:\"Tono\", address: \"Jalan kuburan no 12\", phone: \"0000000000\", isEditing:false},\r\n            {name:\"Toni\", address: \"Jalan kuburan no 11\", phone: \"0000000001\", isEditing:false},\r\n            {name:\"Aku Siapa\", address: \"rumahku dimana\", phone: \"0888899929\", isEditing:false},\r\n        ]\r\n    }\r\n\r\n    addUser = (newUser) => {\r\n        let users = [...this.state.users, newUser];\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    pressEditBtn = (i) => {\r\n        let users = this.state.users;\r\n        for(let q in users){\r\n            users[q].isEditing = false\r\n        }\r\n        users[i].isEditing = !users[i].isEditing;\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    pressCancelBtn = (i) => {\r\n        let users = this.state.users;\r\n        users[i].isEditing = !users[i].isEditing;\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    updateUser = (i, uname, uaddress, uphone) => {\r\n        let users = this.state.users;\r\n        users[i].name = uname;\r\n        users[i].address = uaddress;\r\n        users[i].phone = uphone;\r\n        users[i].isEditing = false;\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    pressDelete = (i) => {\r\n        let users = this.state.users.filter((u, index) => {\r\n            return index !== i;\r\n        });\r\n        this.setState({\r\n            users\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"jumbotron\">\r\n                    <h1 className=\"title\">ReactJS Local CRUD</h1>\r\n                </div>\r\n                <Users allUsers={this.state.users} pressEditBtn={this.pressEditBtn} pressCancelBtn={this.pressCancelBtn} updateUser={this.updateUser} pressDelete={this.pressDelete} />\r\n                <AddUser addUser={this.addUser}/>\r\n                <p className=\"foot\">Copyright © 2020 | Kevin Kelly Isyanta </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport Base from './components/base';\nimport './App.css';\nimport './css/style.css';\nimport './css/font-awesome/css/font-awesome.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <section>\n        <header className=\"App-header\">\n          <Base/>\n        </header>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}